model UserProfile {
  id                String   @id @default(cuid())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  userId            String   @unique // Added @unique directive
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  bio               String   @db.Text
  avatarId          String   @default("2zr34P") // Gorge
  topItemQuizScore  Int      @default(0)
  isLoadoutPublic   Boolean  @default(false)
  isModeratorLocked Boolean  @default(false)
  Build             Build[]
}

// TODO Make this non-plural
model UserItems {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  item      Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)
  itemId    String
  itemLevel Int?     @default(0)

  @@index([userId])
  @@index([itemId])
}

// TODO Make this non-plural
model UserLoadouts {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  build     Build     @relation(fields: [buildId], references: [id], onDelete: Cascade)
  buildId   String
  slot      Int

  @@index([userId])
  @@index([buildId])
}
