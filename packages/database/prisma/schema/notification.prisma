// Tracks all builds that a user has subscribed to
model BuildSubscription {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  subscriber   User     @relation(fields: [subscriberId], references: [id], onDelete: Cascade)
  subscriberId String
  build        Build    @relation(fields: [buildId], references: [id], onDelete: Cascade)
  buildId      String

  @@index([subscriberId])
  @@index([buildId])
}

// Tracks all users that a user has subscribed to
model UserSubscription {
  id             String   @id @default(cuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  subscriber     User     @relation(name: "subscriber", fields: [subscriberId], references: [id], onDelete: Cascade)
  subscriberId   String
  subscribedTo   User     @relation(name: "subscribedTo", fields: [subscribedToId], references: [id], onDelete: Cascade)
  subscribedToId String

  @@index([subscriberId])
  @@index([subscribedToId])
}

// Notifications displayed to users in the BuildSubscription table
model BuildNotification {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   User     @relation(fields: [createdById], references: [id], onDelete: Cascade)
  createdById String
  isRead      Boolean  @default(false)
  isHidden    Boolean  @default(false)
  message     String
  build       Build    @relation(fields: [buildId], references: [id], onDelete: Cascade)
  buildId     String

  @@index([createdById])
}

// Notifications displayed to users in the UserSubscription table
model UserNotification {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   User     @relation(fields: [createdById], references: [id], onDelete: Cascade)
  createdById String
  isRead      Boolean  @default(false)
  isHidden    Boolean  @default(false)
  message     String
  build       Build    @relation(fields: [buildId], references: [id], onDelete: Cascade)
  buildId     String

  @@index([createdById])
}

// Notifications displayed to all users in the site
model SiteNotification {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   User     @relation(fields: [createdById], references: [id], onDelete: Cascade)
  createdById String
  isRead      Boolean  @default(false)
  isHidden    Boolean  @default(false)
  message     String
  url         String

  @@index([createdById])
}
